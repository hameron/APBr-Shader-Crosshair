/***************************************************************************************/
/*! \file Crosshair.usf
* 
* Adds a crosshair to APBr
* 
* 
* Owned by dreamss, some code stolen from tobii and spec
*
* variable crosshair size added by Kimiko
* and pretty much every change after that ... DYNAMIC_COLOR, internal color options, and making it work on rtw/1.9.1 shaders
* fuckshadercoding
*
* Thanks to blizzy for the alternative crosshairs ENABLE_CROSSHAIR_DOT_2 ENABLE_CROSSHAIR_CIRCLE ENABLE_CROSSHAIR_CROSS
* 
*
*
* Usage: 
*  Add '#include "Crosshair.usf"' to  APBUberPostProcessBlendPixelShader.usf before the bottom closing "}".
*   view the included APBUberPostProcessBlendPixelShader.usf if you have questions
*
* DONT FORGET TO EDIT SCREEN_SIZE_X and SCREEN_SIZE_Y 
*
* IF THE GAME CRASHES CROSSHAIR_SIZE IS WAY TO BIG!
****************************************************************************************/
	{
	   float radius_in = CROSSHAIR_OPGL_RADIUS - CROSSHAIR_OPGL_WIDTH;
       
        float2 uv = float2(SceneUV.x * aspectRatio, SceneUV.y);
        float2 center = float2(0.5 * aspectRatio, 0.5);
        float dist;
       
        float cutoff = CROSSHAIR_OPGL_RADIUS * CROSSHAIR_OPGL_CUTOFF;
       
        float bound_top = center.y - cutoff;
        float bound_bottom = center.y + cutoff;
       
        // Cut off the top and bottom for that OPGL look
        if (uv.y > bound_top && uv.y < bound_bottom)
        {
                dist = sqrt(pow(uv.x - center.x, 2) + pow(uv.y - center.y, 2));
 
                if (dist < CROSSHAIR_OPGL_RADIUS && dist > radius_in)
                {
                        #if CROSSHAIR_OPGL_DYNAMIC_COLOR
                                OutColor.rgb = lerp(OutColor.rgb, float3(1.0,1.0,1.0) - OutColor.rgb, CROSSHAIR_OPGL_ALPHA);
                        #else
                                OutColor.rgb = lerp(OutColor.rgb, CROSSHAIR_OPGL_COLOR, CROSSHAIR_OPGL_ALPHA);
                        #endif
                }
        }
		}